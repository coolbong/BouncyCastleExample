package io.github.coolbong;

import org.junit.Test;

import static io.github.coolbong.Util.toBytes;
import static io.github.coolbong.Util.toHex;
import static org.junit.Assert.assertEquals;

public class HMacSha256Test {

    @Test
    public void hmac_sha256_rfc_4231_test_001() {
        byte[] key = toBytes("0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B");
        byte[] msg = toBytes("4869205468657265");

        Mac mac = new Mac();
        byte[] ret = mac.hmacSha256(key, msg);
        assertEquals("B0344C61D8DB38535CA8AFCEAF0BF12B881DC200C9833DA726E9376C2E32CFF7", toHex(ret));
    }

    @Test
    public void hmac_sha256_rfc_4231_test_002() {
        byte[] key = toBytes("4A656665");
        byte[] msg = toBytes("7768617420646F2079612077616E7420666F72206E6F7468696E673F");

        Mac mac = new Mac();
        byte[] ret = mac.hmacSha256(key, msg);
        assertEquals("5BDCC146BF60754E6A042426089575C75A003F089D2739839DEC58B964EC3843", toHex(ret));
    }


    @Test
    public void hmac_sha256_rfc_4231_test_003() {
        byte[] key = toBytes("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
        byte[] msg = toBytes("DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD");

        Mac mac = new Mac();
        byte[] ret = mac.hmacSha256(key, msg);
        assertEquals("773EA91E36800E46854DB8EBD09181A72959098B3EF8C122D9635514CED565FE", toHex(ret));
    }

    @Test
    public void hmac_sha256_rfc_4231_test_004() {
        byte[] key = toBytes("0102030405060708090A0B0C0D0E0F10111213141516171819");
        byte[] msg = toBytes("CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD");

        Mac mac = new Mac();
        byte[] ret = mac.hmacSha256(key, msg);
        assertEquals("82558A389A443C0EA4CC819899F2083A85F0FAA3E578F8077A2E3FF46729665B", toHex(ret));
    }

    @Test
    public void hmac_sha256_rfc_4231_test_005() {
        byte[] key = toBytes("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
        byte[] msg = toBytes("54657374205573696E67204C6172676572205468616E20426C6F636B2D53697A65204B6579202D2048617368204B6579204669727374");

        Mac mac = new Mac();
        byte[] ret = mac.hmacSha256(key, msg);
        assertEquals("60E431591EE0B67F0D8A26AACBF5B77F8E0BC6213728C5140546040F0EE37F54", toHex(ret));
    }

    @Test
    public void hmac_sha256_rfc_4231_test_006() {
        byte[] key = toBytes("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
        byte[] msg = toBytes("5468697320697320612074657374207573696E672061206C6172676572207468616E20626C6F636B2D73697A65206B657920616E642061206C6172676572207468616E20626C6F636B2D73697A6520646174612E20546865206B6579206E6565647320746F20626520686173686564206265666F7265206265696E6720757365642062792074686520484D414320616C676F726974686D2E");

        Mac mac = new Mac();
        byte[] ret = mac.hmacSha256(key, msg);
        assertEquals("9B09FFA71B942FCB27635FBCD5B0E944BFDC63644F0713938A7F51535C3A35E2", toHex(ret));
    }
}
